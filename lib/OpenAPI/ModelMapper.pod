=pod

=head1 NAME

OpenAPI::ModelMapper - ...

=head1 SYNOPSIS

  use OpenAPI::ModelMapper ();

  my $self = OpenAPI::ModelMapper->load_spec_file( 'OpenAPI.yml' );

  my $class_file = $self->generate_class( 'DeploymentStatus' );

=head1 DESCRIPTION

This class is able to generate DTO classes for items in the
C<components/schemas> subsection of an OpenAPI specification. Each class
gets generated according to a given Perl object system. The current default
is L<Moo> and other object systems are not supported yet. Each class has a
prefix C<My::App::DTO>. The trailing C<DTO> part is hard-coded. The leading
C<My::App> part is configurable.

In a L<Mojolicious> controller a decoded request (an input) could be passed
directly to the constructor C<new()> of a DTO class. Example:

  package My::App::Controller::User;
  use Mojo::Base qw( Mojolicious::Controller -signatures );

  sub bar ( $c ) {
    my $data = $c->req->json;

    my $user = My::App::DTO::User->new( $data );
    ...
  }

  1

Dereferencing C<$data> isn't needed if the chosen object system allows to
pass a HASH reference to the constructor. L<Moo/new> for example allows this.

"Problem" response (an output) DTO C<TO_JSON()> implementation

  # TO_JSON needs "predicate => 1" for all properties
  sub TO_JSON {
    my ( $self ) = @_;
    my $json = {};
    foreach ( qw( detail status title ) ) {
      my $has = 'has_' . $_;
      $json->{ $_ } = $self->$_ if $self->$has
    }
    $json
  }

=head1 SEE ALSO

=over 2

=item *

L<OpenAPI::PerlGenerator>

=back

=head1 AUTHOR

Sven Willenbuecher <sven.willenbuecher@gmx.de>

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2025 by Sven Willenbuecher.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=cut
